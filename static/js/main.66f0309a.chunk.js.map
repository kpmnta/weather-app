{"version":3,"sources":["components/Form/Form.js","components/Weather/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","getWeather","React","useState","city","country","form","setForm","handleSubmit","event","preventDefault","document","getElementById","style","display","onSubmit","type","placeholder","name","onChange","state","target","value","id","onClick","Weather","feelsLike","setFeelsLike","mainTemp","setMainTemp","description","setDescription","main","setMain","icon","setIconID","fetch","then","res","json","data","console","log","list","feels_like","temp","weather","className","src","alt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"uQA0DeA,G,MAvDF,SAACC,GAAW,IACbC,EAAeD,EAAfC,WADY,EAGIC,IAAMC,SAAS,CACnCC,KAAM,GACNC,QAAS,KALO,mBAGbC,EAHa,KAGPC,EAHO,KA0BpB,IAAMC,EAAe,SAACC,GAClBA,EAAMC,iBACY,KAAdJ,EAAKF,MAAgC,KAAjBE,EAAKD,SACzBJ,EAAWK,EAAKF,KAAME,EAAKD,SAN/BM,SAASC,eAAe,aAAaC,MAAMC,QAAU,SAWzD,OACI,uBAAMC,SAAUP,EAAhB,UACI,uBACAQ,KAAK,OACLC,YAAY,OACZC,KAAK,OACLC,SAhCW,SAACV,GAChBF,GAAQ,SAAAa,GAAK,kCACNA,GADM,IAEThB,KAAMK,EAAMY,OAAOC,YA8BnBA,MAAOhB,EAAKF,OAEZ,uBACAY,KAAK,OACLC,YAAY,UACZC,KAAK,UACLC,SAhCc,SAACV,GACnBF,GAAQ,SAAAa,GAAK,kCACNA,GADM,IAETf,QAASI,EAAMY,OAAOC,YA8BtBA,MAAOhB,EAAKD,UAEZ,wBAAQkB,GAAG,SAASC,QAAShB,EAA7B,kC,MCLGiB,MA5Cf,WACI,IADe,EAEkBtB,mBAAS,IAF3B,mBAERuB,EAFQ,KAEEC,EAFF,OAGgBxB,mBAAS,IAHzB,mBAGRyB,EAHQ,KAGCC,EAHD,OAIsB1B,mBAAS,IAJ/B,mBAIR2B,EAJQ,KAIIC,EAJJ,OAKQ5B,mBAAS,IALjB,mBAKR6B,EALQ,KAKHC,EALG,OAMU9B,mBAAS,IANnB,mBAMR+B,EANQ,KAMHC,EANG,KAuBf,OACI,qCACI,cAAC,EAAD,CAAMlC,WAjBI,SAACG,EAAMC,GACrB+B,MAAM,sDAAD,OACqDhC,EADrD,YAC6DC,EAD7D,kBARM,mCAQN,kBAGJgC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACHC,QAAQC,IAAIF,GACZb,EAAaa,EAAKG,KAAK,GAAGX,KAAKY,YAC/Bf,EAAYW,EAAKG,KAAK,GAAGX,KAAKa,MAC9Bd,EAAeS,EAAKG,KAAK,GAAGG,QAAQ,GAAGhB,aACvCG,EAAQO,EAAKG,KAAK,GAAGG,QAAQ,GAAGd,MAChCG,EAAUK,EAAKG,KAAK,GAAGG,QAAQ,GAAGZ,YAOlC,sBAAKX,GAAG,YAAR,UACI,sBAAKwB,UAAU,iBAAf,UACI,sBAAKA,UAAU,OAAf,UACI,+CAAmBnB,EAAnB,YACA,8CAAkBF,EAAlB,YACA,+CAAmBI,KACnB,sDAA0BE,QAE9B,8BACI,qBAAKgB,IAAG,2CAAuCd,EAAvC,WAAuDe,IAAI,sBAG3E,sGC5BDC,MATf,WACE,OACE,qCACE,2DACA,cAAC,EAAD,QCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlD,SAASC,eAAe,SAM1BuC,M","file":"static/js/main.66f0309a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Form.css';\r\n\r\nconst Form = (props) => {\r\n    const { getWeather } = props \r\n\r\n    const [form, setForm] = React.useState({\r\n        city: '',\r\n        country: ''\r\n    })\r\n\r\n    const handleCity = (event) => {\r\n        setForm(state => ({\r\n            ...state,\r\n            city: event.target.value\r\n        }))\r\n    }\r\n\r\n    const handleCountry = (event) => {\r\n        setForm(state => ({\r\n            ...state,\r\n            country: event.target.value\r\n        }))\r\n    }\r\n\r\n    function showData() {\r\n        document.getElementById('container').style.display = \"block\";\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if (form.city !== '' && form.country !== '') {\r\n            getWeather(form.city, form.country)\r\n        }\r\n        showData();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            placeholder=\"city\"\r\n            name=\"city\"\r\n            onChange={handleCity}\r\n            value={form.city}\r\n            />\r\n            <input \r\n            type=\"text\"\r\n            placeholder=\"country\"\r\n            name=\"country\"\r\n            onChange={handleCountry}\r\n            value={form.country}\r\n            />\r\n            <button id=\"submit\" onClick={handleSubmit}>Let's Find Out!</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import React, {useState} from \"react\";\r\nimport Form from \"../Form/Form\";\r\nimport './Weather.css';\r\n\r\nfunction Weather() {\r\n    const APIKEY = '9a1bddee0eb996a8fde565585fe05470';\r\n    const [feelsLike,setFeelsLike] = useState('');\r\n    const [mainTemp,setMainTemp] = useState('');\r\n    const [description,setDescription] = useState('');\r\n    const [main,setMain] = useState('');\r\n    const [icon,setIconID] = useState('');\r\n\r\n    const fetchData = (city, country) => {\r\n        fetch(\r\n            `https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&APPID=${APIKEY}&units=metric`\r\n        )\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            console.log(data);\r\n            setFeelsLike(data.list[0].main.feels_like);\r\n            setMainTemp(data.list[0].main.temp);\r\n            setDescription(data.list[0].weather[0].description);\r\n            setMain(data.list[0].weather[0].main);\r\n            setIconID(data.list[0].weather[0].icon);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form getWeather={fetchData}/>\r\n            <div id=\"container\">\r\n                <div className=\"data-container\">\r\n                    <div className=\"data\">\r\n                        <h3>Temperature: { mainTemp } °c</h3>\r\n                        <h3>Feels like: { feelsLike } °c</h3>\r\n                        <h3>Description: { description }</h3>\r\n                        <h3>Weather Conditions: { main }</h3>\r\n                    </div>\r\n                    <div>\r\n                        <img src={ `http://openweathermap.org/img/wn/${icon}@2x.png` } alt=\"icon weather\"/>\r\n                    </div> \r\n                </div>\r\n                <p>well, maybe we should stay at home today ¯\\_(ツ)_/¯</p>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Weather;\r\n","import React from 'react';\nimport './App.css';\nimport Weather from './components/Weather/Weather';\n\n\nfunction App() {\n  return (\n    <>\n      <h1>Should I leave the house?</h1>\n      <Weather />\n    </>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}